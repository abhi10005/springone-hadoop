<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/hadoop"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="hadoop.properties"/>

	<configuration>
		fs.defaultFS=${hd.fs}
		yarn.resourcemanager.address=${hd.rm}
		mapreduce.framework.name=${mr.fw}
	</configuration>

	<script id="hdfsScript" language="groovy" location="file-prep.groovy">
		<property name="outputDir" value="${pig.outputPath}"/>
	</script>	

	<pig-factory exec-type="MAPREDUCE" properties-location="pig-server.properties"/>
		
	<pig-runner id="pigRunner"
		pre-action="hdfsScript"
		run-at-startup="true" >
		<script location="tweet-analysis.pig">
			<arguments>
				inputDir=${pig.inputPath}
				outputDir=${pig.outputPath}		
			</arguments>
		</script>					
	</pig-runner>

</beans:beans>
